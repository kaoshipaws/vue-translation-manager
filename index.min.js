const fs=require("fs"),path=require("path"),execall=require("execall"),glob=require("glob"),uniq=require("lodash.uniq");function TranslationManager(opts){if(this.languages=opts.languages||[],0===this.languages.length)throw new Error("No languages given");if(this.adapter=opts.adapter,!this.adapter)throw new Error("No adapter given");this.srcPath=opts.srcPath||process.cwd(),this.rootPath=opts.root||process.cwd(),this.adapter._setLanguages(this.languages)}function camelCase(text){return text.trim().split(" ").map((word=>word.toLowerCase())).map(((word,i)=>0===i?word:word[0].toUpperCase()+word.substring(1))).join("")}function increaseTrailingNumber(str){let chars=str.split("");chars.reverse();let numbers=0;for(var i=0;i<chars.length;i++){isNaN(parseInt(chars[i]))||numbers++;break}chars=chars.reverse().join("");let keyWithoutNumber=chars.substring(0,chars.length-numbers),currentNumber=parseInt(chars.substring(chars.length-numbers))||0;return`${keyWithoutNumber}${++currentNumber}`}module.exports=TranslationManager,module.exports.JSONAdapter=require("./adapter-json.js"),TranslationManager.prototype.getLanguages=function(){return this.languages},TranslationManager.prototype.getSrcPath=function(){return this.srcPath},TranslationManager.prototype.getTemplateForSingleFileComponent=function(path){const contents=fs.readFileSync(path,{encoding:"utf8"}),templateResult=/<template>([\w\W]*)<\/template>/g.exec(contents);if(!templateResult)return null;let template="";return templateResult&&templateResult[1]&&(template=templateResult[1]),{template:template,offset:templateResult[0].indexOf(templateResult[1])+templateResult.index}},TranslationManager.prototype.getStringsForComponent=function(pathToComponent){var templateResult=this.getTemplateForSingleFileComponent(pathToComponent);if(!templateResult)return[];var templateOffset=templateResult.offset,template=templateResult.template;function extractTemplateExpression(text){const indexOfOpening=text.indexOf("{{"),indexOfClosing=text.indexOf("}}");return-1===indexOfClosing||-1===indexOfOpening?{expression:null,text:text}:{index:indexOfOpening,indexClosing:indexOfClosing,expression:text.substring(indexOfOpening+2,indexOfClosing).trim(),text:""+text.substring(0,indexOfOpening)+text.substring(indexOfClosing+2)}}var textNodeMatches=execall(/>([^<>]*)</gm,template).map((match=>{let expressionsInfo=function(text){let currText=text,expression=!0,expressions=[],currentOffset=0;for(;null!==expression;){let result=extractTemplateExpression(currText);currText=result.text,expression=result.expression,null!==expression&&(expressions.push({expr:expression,indexStart:currentOffset+result.index,indexEnd:currentOffset+result.indexClosing}),currentOffset+=result.indexClosing-result.index+2)}return{staticText:currText.trim(),hasStaticText:currText.trim().length>0,expressions:expressions}}(match.sub[0]);if(expressionsInfo.hasStaticText&&!(expressionsInfo.staticText.length<3))return{indexInTemplate:match.index+1,indexInFile:templateOffset+match.index+1,originalString:match.sub[0],string:expressionsInfo.staticText,stringLength:match.sub[0].length,expressions:expressionsInfo.expressions,where:"textNode"}})).filter(Boolean),attributeMatches=execall(/\s([a-z]*-)?(title|label|text|caption|placeholder)="([^"]*)"/gm,template).map((match=>{if(match.sub[2]&&""!==match.sub[2].trim())return{indexInTemplate:match.index+match.match.indexOf(match.sub[2]),indexInFile:templateOffset+match.index+match.match.indexOf(match.sub[2]),originalString:match.sub[2].trim(),string:match.sub[2].trim(),stringLength:match.sub[2].length,expressions:[],where:"attribute"}})).filter(Boolean);return textNodeMatches.concat(...attributeMatches).sort(((a,b)=>a.indexInFile<b.indexInFile?-1:a.indexInFile>b.indexInFile?1:0))},TranslationManager.prototype.replaceStringsInComponent=function(pathToComponent,strings){var contentsAfter=fs.readFileSync(pathToComponent,{encoding:"utf8"}),offset=0;strings.map((str=>{var translateFn=`{{ $t('${str.key}') }}`;if(str.expressions.length>0){for(var params=[],i=0;i<str.expressions.length;i++)params.push(`'${i+1}': ${str.expressions[i].expr}`);translateFn=`{{ $t('${str.key}', { ${params.join(", ")} }) }}`}var firstPart=contentsAfter.substring(0,offset+str.indexInFile),secondPart=contentsAfter.substring(offset+str.indexInFile+str.stringLength);"attribute"===str.where&&(translateFn=`$t('${str.key}')`,firstPart=firstPart.substring(0,firstPart.lastIndexOf(" ")+1)+":"+firstPart.substring(firstPart.lastIndexOf(" ")+1),offset+=1),contentsAfter=`${firstPart}${translateFn}${secondPart}`,offset+=translateFn.length-str.stringLength})),fs.writeFileSync(pathToComponent,contentsAfter)},TranslationManager.prototype.getSuggestedKey=async function(pathToFile,text,usedKeys){var words=text.trim().split(" ");words.length>4&&(words=words.slice(0,3));let word=words.map((w=>w.toUpperCase())).join("_");return word||(word=`TESTSTRING_${Math.floor(1e4*Math.random())}`),await this.getCompatibleKey(`${word}`,usedKeys)},TranslationManager.prototype.getCompatibleKey=async function(suggestedKey,usedKeys){let keys=await this.adapter.getAllKeys();keys=Object.keys(keys).reduce(((map,lang)=>map.concat(keys[lang])),[]),usedKeys&&(Array.isArray(usedKeys),1)&&(keys=keys.concat(usedKeys));for(;keys.some((key=>{let existingCheck=new RegExp("^("+suggestedKey.replace(/\./g,"\\.")+")(\\..*)?$"),existingMatch=key.match(existingCheck);if(existingMatch){let secondPart=suggestedKey.substring(existingMatch[1].length);return suggestedKey=`${increaseTrailingNumber(existingMatch[1])}${secondPart}`,!0}let reg=new RegExp("^"+key.replace(/\./g,"\\.")+"(\\..*)?$");return!!suggestedKey.match(reg)&&(suggestedKey=increaseTrailingNumber(suggestedKey),!0)})););return suggestedKey},TranslationManager.prototype.addTranslatedString=function(key,translations){return this.adapter.addTranslations(key,translations)},TranslationManager.prototype.getUnusedTranslations=async function(){var unusedTranslations=[];let allKeys=[],keysInLanguages=await this.adapter.getAllKeys();return Object.keys(keysInLanguages).map((lang=>{allKeys=allKeys.concat(keysInLanguages[lang])})),allKeys=uniq(allKeys),allKeys.map((translationKey=>{0===this.getTranslationUsages(translationKey).length&&unusedTranslations.push(translationKey)})),unusedTranslations},TranslationManager.prototype.getTranslationsForKey=async function(key){return this.adapter.getTranslations(key)},TranslationManager.prototype.deleteTranslations=async function(key){return this.adapter.deleteTranslations([key])},TranslationManager.prototype.getTranslationUsages=function(translationKey){var files=glob.sync(`${this.srcPath}/**/*.vue`),usages=[];return files.map((file=>{var fileContents=fs.readFileSync(file);fileContents.indexOf(`$t('${translationKey}'`)>-1&&usages.push(file),fileContents.indexOf(`$t("${translationKey}"`)>-1&&usages.push(file)})),usages},TranslationManager.prototype.validate=async function(){let missingKeys={},allKeys=[],keysInLanguages=await this.adapter.getAllKeys();return Object.keys(keysInLanguages).map((lang=>{allKeys=allKeys.concat(keysInLanguages[lang])})),allKeys=uniq(allKeys),this.languages.forEach((lang=>{for(let key of allKeys)keysInLanguages[lang].includes(key)||(missingKeys.hasOwnProperty(lang)||(missingKeys[lang]=[]),missingKeys[lang].push(key))})),missingKeys};